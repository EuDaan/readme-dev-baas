{
  "openapi": "3.0.1",
  "servers": [
    {
      "url": "https://genial-arquitetura-corebank.homolog.api.genial.systems",
      "description": "Homolog server"
    }
  ],
  "info": {
    "title": "Genial.Arquitetura.Corebank",
    "description": "API Banking Services",
    "contact": {
      "name": "Genial Investimentos",
      "url": "https://www.genialinvestimentos.com.br/"
    },
    "version": "2.0"
  },
  "paths": {
    "/v2/operations/ted/{idLiquidacao}": {
      "get": {
        "tags": [
          "Operations"
        ],
        "summary": "Buscar as transações Ted no Mongo",
        "parameters": [
          {
            "name": "idLiquidacao",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentTedMongoV2"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectValidationErrorModelIEnumerableWrapper"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ValidationErrorModel"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ValidationErrorModel"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectValidationErrorModelIEnumerableWrapper"
                }
              }
            }
          }
        }
      }
    },
    "/v2/payment/ted": {
      "post": {
        "tags": [
          "Payment"
        ],
        "summary": "Realizar pagamento ted",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentTedSimplificadoRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentTedSimplificadoRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentTedSimplificadoRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentTedSimplificadoRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentDarfResponseMateraErrorResponseListWrapper"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ObjectMateraErrorResponseListWrapper"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ValidationErrorModel"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ErrorMessage": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "exception": {
            "type": "string",
            "nullable": true
          },
          "stackTrace": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "MateraErrorResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ObjectId": {
        "type": "object",
        "properties": {
          "timestamp": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "machine": {
            "type": "integer",
            "format": "int32",
            "readOnly": true,
            "deprecated": true
          },
          "pid": {
            "type": "integer",
            "format": "int32",
            "readOnly": true,
            "deprecated": true
          },
          "increment": {
            "type": "integer",
            "format": "int32",
            "readOnly": true,
            "deprecated": true
          },
          "creationTime": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ObjectMateraErrorResponseListWrapper": {
        "type": "object",
        "properties": {
          "data": {
            "nullable": true
          },
          "error": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MateraErrorResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ObjectValidationErrorModelIEnumerableWrapper": {
        "type": "object",
        "properties": {
          "data": {
            "nullable": true
          },
          "error": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationErrorModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PaymentDarfResponse": {
        "type": "object",
        "properties": {
          "idLiquidacao": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PaymentDarfResponseMateraErrorResponseListWrapper": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/PaymentDarfResponse"
          },
          "error": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MateraErrorResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PaymentTedMongoV2": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/ObjectId"
          },
          "createDate": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updateDate": {
            "type": "string",
            "format": "date-time"
          },
          "guidId": {
            "type": "string",
            "format": "uuid",
            "writeOnly": true
          },
          "agencia": {
            "type": "integer",
            "format": "int64"
          },
          "numConta": {
            "type": "integer",
            "format": "int64"
          },
          "observacao": {
            "type": "string",
            "nullable": true
          },
          "complemento": {
            "type": "string",
            "nullable": true
          },
          "numeroAgenciaDoc": {
            "type": "integer",
            "format": "int64"
          },
          "dvAgenciaFavorecido": {
            "type": "string",
            "nullable": true
          },
          "numeroContaDoc": {
            "type": "integer",
            "format": "int64"
          },
          "nomeFavorecido": {
            "type": "string",
            "nullable": true
          },
          "cpfCnpjFavorecido": {
            "type": "string",
            "nullable": true
          },
          "idTipoContaCredito": {
            "type": "integer",
            "format": "int64"
          },
          "idTipoPessoa": {
            "type": "string",
            "nullable": true
          },
          "valor": {
            "type": "number",
            "format": "double"
          },
          "idBancoDoc": {
            "type": "integer",
            "format": "int64"
          },
          "referenciaMovimento": {
            "type": "string",
            "nullable": true
          },
          "idLiquidacao": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PaymentTedSimplificadoRequest": {
        "type": "object",
        "properties": {
          "agencia": {
            "type": "integer",
            "format": "int64"
          },
          "numConta": {
            "type": "integer",
            "format": "int64"
          },
          "observacao": {
            "type": "string",
            "nullable": true
          },
          "complemento": {
            "type": "string",
            "nullable": true
          },
          "numeroAgenciaDoc": {
            "type": "integer",
            "format": "int64"
          },
          "dvAgenciaFavorecido": {
            "type": "string",
            "nullable": true
          },
          "numeroContaDoc": {
            "type": "integer",
            "format": "int64"
          },
          "nomeFavorecido": {
            "type": "string",
            "nullable": true
          },
          "cpfCnpjFavorecido": {
            "type": "string",
            "nullable": true
          },
          "idTipoContaCredito": {
            "type": "integer",
            "format": "int64"
          },
          "idTipoPessoa": {
            "type": "string",
            "nullable": true
          },
          "valor": {
            "type": "number",
            "format": "double"
          },
          "idBancoDoc": {
            "type": "integer",
            "format": "int64"
          },
          "referenciaMovimento": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ValidationErrorModel": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "mensagem": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "JWT Authorization header using the Bearer scheme. \\r\\n\\r\\n \n                      Enter 'Bearer' [space] and then your token in the text input below.\n                      \\r\\n\\r\\nExample: 'Bearer 12345abcdef'",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "Bearer": []
    }
  ]
}